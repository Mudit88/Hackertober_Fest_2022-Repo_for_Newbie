
#include <bits/stdc++.h>
using namespace std;



#define V 9


int minDistance(int dist[], bool sptSet[])
{


	int min = INT_MAX, min_index;

	for (int i = 0; i < V; i++)
		if (sptSet[i] == false && dist[i] <= min)
			min = dist[i], min_index = i;

	return min_index;
}


void printSolution(int dist[])
{
	cout << "Vertex  Distance from  Source" << endl;
	for (int i = 0; i < V; i++)
		cout << i << "   " << dist[i] << endl;
}


void dijstra(vector<vector<int>> graph, int s)
{
	int dist[V]; 

	bool sptSet[V]; 
	for (int i = 0; i < V; i++)
		dist[i] = INT_MAX, sptSet[i] = false;


	dist[s] = 0;

	
	for (int j = 0; j < V - 1; j++) {
		
		int u = minDistance(dist, sptSet);

		
		sptSet[u] = true;

		
		for (int i = 0; i < V; i++)

			
			if (!sptSet[i] && graph[u][i]
				&& dist[u] != INT_MAX
				&& dist[u] + graph[u][i] < dist[i])
				dist[i] = dist[u] + graph[u][i];
	}


	printSolution(dist);
}

int main()
{
vector<vector<int>> v(V,vector<int>(V,0));
cout<<"enter element "<<endl;
for(int i=0;i<V;i++){
    for(int j=0;j<V;j++){
        cin>>v[i][j];
    }
    cout<<endl;
}
	
	
	dijstra(v, 0);

	return 0;
}
